job "paperless" {
  datacenters = ["dc1"]
  type        = "service"

  group "paperless" {
    count = 1

    network {
      mode = "host"
      port "web" {
        to = 8000
        static = 8000
      }
      port "db" {
        to = 5432
        static = 5432
      }
      port "redis" {
        to = 6379
        static = 6379
      }
    }

    service {
        provider = "nomad" 
        name = "paperless"
        port = "web"
        address_mode = "host"

        tags = [
            "traefik.enable=true",
            "traefik.http.routers.paperless.rule=Host(`${hostname}`)",
            "traefik.http.routers.paperless.entrypoints=websecure",
            "traefik.http.routers.paperless.tls.certresolver=my-resolver"
        ]

        check {
            type     = "http"
            path     = "/"
            interval = "10s"
            timeout  = "2s"
        }
    }

    task "webserver" {
      driver = "podman"

      config {
        privileged = true
        image = "ghcr.io/paperless-ngx/paperless-ngx:${version}"
        ports = ["web"]
        network_mode = "host"
         
        volumes = [
          "/mnt/nas/paperless/data:/usr/src/paperless/data",
          "/mnt/nas/paperless/media:/usr/src/paperless/media",
          "/mnt/nas/paperless/export:/usr/src/paperless/export",
          #"/volume1/austausch/postkorb:/usr/src/paperless/consume"
        ]
      }

      vault {}
      template {
      data = <<EOF
{{with secret "kv/data/default/paperless/config"}}
PAPERLESS_SECRET_KEY={{.Data.data.secret_key}}
PAPERLESS_ADMIN_USER={{.Data.data.admin_user}}
PAPERLESS_ADMIN_PASSWORD={{.Data.data.admin_password}}
PAPERLESS_DBNAME={{.Data.data.dbname}}
PAPERLESS_DBUSER={{.Data.data.dbuser}}
PAPERLESS_DBPASS={{.Data.data.dbpass}}
{{end}}
PAPERLESS_REDIS = "redis://{{ env "NOMAD_ADDR_redis" }}"
PAPERLESS_DBHOST = "{{ env "NOMAD_IP_db" }}"
PAPERLESS_DBPORT = "{{ env "NOMAD_PORT_db" }}"
PAPERLESS_URL = "http://{{ env "NOMAD_ADDR_web" }}"
PAPERLESS_TIME_ZONE = "Europe/Berlin"
PAPERLESS_OCR_LANGUAGE = "deu"
PAPERLESS_URL=https://${hostname}
USERMAP_UID = 0
USERMAP_GID = 0
#USERMAP_UID = 258047
#USERMAP_GID = 65536
EOF

        destination = "secrets/env"
        env         = true
      }

      resources {
        cpu    = 2000
        memory = 2048
      }
    }

    task "db" {
      driver = "podman"

      config {
        privileged = true
        image = "docker.io/postgres:16"
        ports = ["db"]

        volumes = [
          "/mnt/nas/paperless/db:/var/lib/postgresql/data"
        ]
      }

      vault {}
      template {
        data = <<EOF
{{with secret "kv/data/default/paperless/config"}}
POSTGRES_DB={{.Data.data.dbname}}
POSTGRES_USER={{.Data.data.dbuser}}
POSTGRES_PASSWORD={{.Data.data.dbpass}}
{{end}}
EOF

        destination = "secrets/env"
        env         = true
      }

      resources {
        cpu    = 300
        memory = 256
      }
    }

    task "broker" {
      driver = "podman"

      config {
        privileged = true
        image = "docker.io/redis:7"
        ports = ["redis"]
        network_mode = "host"
      }

      resources {
        cpu    = 200
        memory = 128
      }
    }
  }
}